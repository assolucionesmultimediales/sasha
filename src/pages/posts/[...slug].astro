---
import { getCollection } from "astro:content";
import { SlugToRealSlug } from "../../utils/hash";

import PostLayout from "../../layouts/PostLayout.astro";

interface Title {
  title: string;
  slug: string;
  children: Title[];
}

export async function getStaticPaths() {
  const postEntries = await getCollection("posts");
  return postEntries.map((entry) => ({
    params: { slug: SlugToRealSlug(entry.slug) },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
// let tocHTMLString = "";
// function Traverse(node: Title, level: number): string {
//   return `
//     <div>
//       <a class="h${level}" href="#${node.slug}">${node.title}</a>
//       ${node.children.length > 0 ? node.children.map((child) => Traverse(child, level + 1)).join("") : ""}
//     </div>`;
// }
// for (const children of remarkPluginFrontmatter.toc) {
//   tocHTMLString += Traverse(children, 1);
// }
---

<!-- <Fragment set:html={tocHTMLString} /> -->
<PostLayout
  title={entry.data.title}
  subTitle={entry.data.description}
  headerImg={entry.data.image}
  published={entry.data.published}
>
  <Content />
</PostLayout>
